【要件定義書テンプレート（StudyTrack）】

1. はじめに
-------------------------
- アプリ名：StudyTrack
- ドキュメントの目的：学習記録アプリ「StudyTrack」の開発にあたり、必要な機能・画面・技術要件を整理する。
- 対象読者：開発者、自分（個人開発）
- 用語の定義：略
-開発モデル：ウォーターフォールモデル

2. システムの概要
-------------------------
- 目的：学習内容と時間を記録し、自己学習の習慣化とモチベーション維持に役立てる
- 想定ユーザー：
  - 独学している学生や社会人
  - 学習を記録・可視化したい人
  - 他の学習者の活動を参考にしたい人
- 特徴：
  - 自分の学習記録を管理
  - 他のユーザーの記録を閲覧・検索

3. 機能要件（MVP）
-------------------------
- 認証機能：
  - ユーザー登録 / ログイン / ログアウト
- 学習記録機能：
  - 記録作成（タイトル、カテゴリ、学習時間、メモ）
  - 記録一覧表示（自分の記録）
  - 記録編集・削除
- 他ユーザー閲覧機能：
  - ユーザーID検索
  - 他ユーザーの記録一覧表示
  - ユーザー名・自己紹介の表示（プロフィール）

4. ユースケース
-------------------------
- ユーザーは新規登録する
- 学習が終わったら記録を追加する
- 過去の記録を一覧で確認できる
- 記録を編集・削除できる
- 他ユーザーのIDを検索して記録を閲覧できる

5. 画面一覧・URL設計（外部設計）
-------------------------
画面名             | URL                             | 内容
-------------------|---------------------------------|----------------------------
ログイン           | /login                          | メールとパスワードでログイン
登録               | /register                       | 新規アカウント作成（ユーザーID・名前・メール・パスワード）
ダッシュボード     | /dashboard                      | 学習記録の一覧表示（自分）
記録作成           | /records/create                 | 新規学習記録を追加
記録編集           | /records/{id}/edit              | 学習記録を編集
他ユーザー記録一覧 | /users/{user_id}/records        | 他ユーザーの記録を閲覧
プロフィール       | /profile                        | 自己紹介の編集

6. データ構造（DB設計）
-------------------------
[users テーブル（Laravelデフォルト）]
- user_id : int（主キー）
- name : string（ユーザー名）
- email : string（メールアドレス）
- password : string（ハッシュ化）
- bio : text（自己紹介文）
- public_id : string（公開用ユーザーID、URLに使用、ユニーク）

[learning_logs テーブル
- learning_id :int(主キー)
- user_id : int(外部キー)
- title : string（学習タイトル）
- category : string（カテゴリ）
- minutes : int（学習時間）
- memo : text（メモ）
- created_at : timestamp
- updated_at : timestamp

7. 非機能要件・技術構成
-------------------------
- Webサーバー：Nginx
- フレームワーク：Laravel（PHP）
- DB：PostgreSQL
- 開発環境：Docker（Docker Compose）
- ソース管理：Git + GitHub
- OS：Linux系（AWSにて運用予定）

8. スケジュール
-------------------------
フェーズ       | 内容
------------p--|-------------------------------
要件定義       | 機能・画面・データ項目の整理
外部設計       | 画面遷移図、URL設計、UI構成など
内部設計       | DB設計・ルーティング設計など
実装           | Docker + Laravel環境構築〜機能実装
テスト         | CRUD・認証・バリデーション動作確認
公開準備       | AWSデプロイ、ドメイン設定

